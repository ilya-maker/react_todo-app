{"version":3,"sources":["components/Header/Header.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","state","title","completed","errorTitle","handleChangeTitle","target","setState","value","handleSubmit","event","preventDefault","newTitle","trim","resetInput","props","newTodo","id","this","className","action","onSubmit","htmlFor","CN","name","placeholder","onChange","Component","TodoItem","deleteTodo","completedTodo","type","onClick","TodoList","visibleTodos","map","item","key","defaultProps","Footer","countCompleted","handleTypeOfFilter","href","App","todos","counter","typeOfFilter","prev","filter","todo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e255aca4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CN from 'classnames';\n\nexport class Header extends Component {\n  state = {\n    title: '',\n    completed: false,\n    errorTitle: false,\n  };\n\n  handleChangeTitle = ({ target }) => {\n    this.setState({\n      title: target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const newTitle = this.state.title.trim();\n\n    if (!newTitle) {\n      this.setState({\n        errorTitle: true,\n      });\n      this.resetInput();\n\n      return;\n    }\n\n    // не знаю как для пропсов проптайп написать\n    // eslint-disable-next-line react/prop-types\n    this.props.newTodo({\n      title: newTitle,\n      // eslint-disable-next-line react/prop-types\n      id: this.props.id,\n      completed: this.state.completed,\n    });\n    this.setState({\n      errorTitle: false,\n    });\n    this.resetInput();\n  };\n\n  resetInput = () => {\n    this.setState({\n      title: '',\n    });\n  };\n\n  render() {\n    const { title, errorTitle } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form action=\"\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            <input\n              className={CN({\n                'new-todo new-todo-error': errorTitle,\n                'new-todo': !errorTitle,\n              })}\n              name=\"new-todo\"\n              placeholder={errorTitle\n                ? ('введи хоть чет')\n                : ('What needs to be done?')}\n              value={title}\n              onChange={this.handleChangeTitle}\n            />\n          </label>\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CN from 'classnames';\n\nexport const TodoItem = (\n  { title,\n    completed,\n    id,\n    deleteTodo,\n    completedTodo },\n) => (\n  <li className={CN({ completed })}>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={id}\n        onClick={() => completedTodo(id)}\n      />\n      <label htmlFor=\"todo-1\">\n        {title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  completedTodo: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({ visibleTodos, deleteTodo, completedTodo }) => (\n  <section className=\"main\">\n    <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {visibleTodos.map(item => (\n        <TodoItem\n          {...item}\n          deleteTodo={deleteTodo}\n          completedTodo={completedTodo}\n          key={item.id}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  completedTodo: PropTypes.func.isRequired,\n  visibleTodos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })),\n};\n\nTodoList.defaultProps = {\n  visibleTodos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Footer = (\n  { countCompleted,\n    handleTypeOfFilter },\n) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {countCompleted}\n      {' '}\n      items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className=\"selected\"\n          onClick={() => handleTypeOfFilter('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => handleTypeOfFilter('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => handleTypeOfFilter('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button type=\"button\" className=\"clear-completed\">\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  countCompleted: PropTypes.number.isRequired,\n  handleTypeOfFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    counter: 1,\n    typeOfFilter: '',\n  };\n\n  newTodo = ({ id, title, completed }) => {\n    this.setState(prev => ({\n      todos: [\n        ...prev.todos,\n        {\n          id,\n          title,\n          completed,\n        },\n      ],\n      counter: prev.counter + 1,\n    }));\n  };\n\n  deleteTodo = (id) => {\n    this.setState(prev => ({\n      todos: prev.todos.filter(item => item.id !== id),\n    }));\n  };\n\n  completedTodo = (id) => {\n    this.setState(prev => ({\n      todos: prev.todos.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item, completed: !item.completed,\n          };\n        }\n\n        return item;\n      }),\n    }));\n  };\n\n  handleTypeOfFilter = (type) => {\n    this.setState({\n      typeOfFilter: type,\n    });\n  };\n\n  render() {\n    const { todos, typeOfFilter } = this.state;\n    let visibleTodos = [...todos];\n\n    if (typeOfFilter === 'completed') {\n      visibleTodos = todos.filter(todo => todo.completed);\n    }\n\n    if (typeOfFilter === 'active') {\n      visibleTodos = todos.filter(todo => !todo.completed);\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <Header\n          todos={todos}\n          newTodo={this.newTodo}\n          id={this.state.counter}\n        />\n        <TodoList\n          visibleTodos={visibleTodos}\n          deleteTodo={this.deleteTodo}\n          completedTodo={this.completedTodo}\n        />\n        <Footer\n          countCompleted={todos.filter(item => item.completed === false).length}\n          handleTypeOfFilter={this.handleTypeOfFilter}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}